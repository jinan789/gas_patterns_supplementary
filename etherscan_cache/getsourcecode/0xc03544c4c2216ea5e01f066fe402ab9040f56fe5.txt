{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.3.10\r\n\"\"\"\r\n@title XYZ Broadcaster\r\n@author CurveFi\r\n\"\"\"\r\n\r\n\r\nevent Broadcast:\r\n    agent: Agent\r\n    chain_id: uint256\r\n    nonce: uint256\r\n    digest: bytes32\r\n\r\nevent ApplyAdmins:\r\n    admins: AdminSet\r\n\r\nevent CommitAdmins:\r\n    future_admins: AdminSet\r\n\r\n\r\nenum Agent:\r\n    OWNERSHIP\r\n    PARAMETER\r\n    EMERGENCY\r\n\r\n\r\nstruct AdminSet:\r\n    ownership: address\r\n    parameter: address\r\n    emergency: address\r\n\r\nstruct Message:\r\n    target: address\r\n    data: Bytes[MAX_BYTES]\r\n\r\n\r\nMAX_BYTES: constant(uint256) = 512\r\nMAX_MESSAGES: constant(uint256) = 32\r\n\r\n\r\nadmins: public(AdminSet)\r\nfuture_admins: public(AdminSet)\r\n\r\nagent: HashMap[address, Agent]\r\n\r\nnonce: public(HashMap[Agent, HashMap[uint256, uint256]])  # agent -> chainId -> nonce\r\ndigest: public(HashMap[Agent, HashMap[uint256, HashMap[uint256, bytes32]]])  # agent -> chainId -> nonce -> messageDigest\r\n\r\n\r\n@external\r\ndef __init__(_admins: AdminSet):\r\n    assert _admins.ownership != _admins.parameter  # a != b\r\n    assert _admins.ownership != _admins.emergency  # a != c\r\n    assert _admins.parameter != _admins.emergency  # b != c\r\n\r\n    self.admins = _admins\r\n\r\n    self.agent[_admins.ownership] = Agent.OWNERSHIP\r\n    self.agent[_admins.parameter] = Agent.PARAMETER\r\n    self.agent[_admins.emergency] = Agent.EMERGENCY\r\n\r\n    log ApplyAdmins(_admins)\r\n\r\n\r\n@external\r\ndef broadcast(_chain_id: uint256, _messages: DynArray[Message, MAX_MESSAGES]):\r\n    \"\"\"\r\n    @notice Broadcast a sequence of messeages.\r\n    @param _chain_id The chain id to have messages executed on.\r\n    @param _messages The sequence of messages to broadcast.\r\n    \"\"\"\r\n    agent: Agent = self.agent[msg.sender]\r\n    assert agent != empty(Agent)\r\n\r\n    digest: bytes32 = keccak256(_abi_encode(_messages))\r\n    nonce: uint256 = self.nonce[agent][_chain_id]\r\n\r\n    self.digest[agent][_chain_id][nonce] = digest\r\n    self.nonce[agent][_chain_id] = nonce + 1\r\n\r\n    log Broadcast(agent, _chain_id, nonce, digest)\r\n\r\n\r\n@external\r\ndef commit_admins(_future_admins: AdminSet):\r\n    \"\"\"\r\n    @notice Commit an admin set to use in the future.\r\n    \"\"\"\r\n    assert msg.sender == self.admins.ownership\r\n\r\n    assert _future_admins.ownership != _future_admins.parameter  # a != b\r\n    assert _future_admins.ownership != _future_admins.emergency  # a != c\r\n    assert _future_admins.parameter != _future_admins.emergency  # b != c\r\n\r\n    self.future_admins = _future_admins\r\n    log CommitAdmins(_future_admins)\r\n\r\n\r\n@external\r\ndef apply_admins():\r\n    \"\"\"\r\n    @notice Apply the future admin set.\r\n    \"\"\"\r\n    admins: AdminSet = self.admins\r\n    assert msg.sender == admins.ownership\r\n\r\n    # reset old admins\r\n    self.agent[admins.ownership] = empty(Agent)\r\n    self.agent[admins.parameter] = empty(Agent)\r\n    self.agent[admins.emergency] = empty(Agent)\r\n\r\n    # set new admins\r\n    future_admins: AdminSet = self.future_admins\r\n    self.agent[future_admins.ownership] = Agent.OWNERSHIP\r\n    self.agent[future_admins.parameter] = Agent.PARAMETER\r\n    self.agent[future_admins.emergency] = Agent.EMERGENCY\r\n\r\n    self.admins = future_admins\r\n    log ApplyAdmins(future_admins)","ABI":"[{\"name\":\"Broadcast\",\"inputs\":[{\"name\":\"agent\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"chain_id\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"nonce\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"digest\",\"type\":\"bytes32\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"ApplyAdmins\",\"inputs\":[{\"name\":\"admins\",\"type\":\"tuple\",\"components\":[{\"name\":\"ownership\",\"type\":\"address\"},{\"name\":\"parameter\",\"type\":\"address\"},{\"name\":\"emergency\",\"type\":\"address\"}],\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"CommitAdmins\",\"inputs\":[{\"name\":\"future_admins\",\"type\":\"tuple\",\"components\":[{\"name\":\"ownership\",\"type\":\"address\"},{\"name\":\"parameter\",\"type\":\"address\"},{\"name\":\"emergency\",\"type\":\"address\"}],\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_admins\",\"type\":\"tuple\",\"components\":[{\"name\":\"ownership\",\"type\":\"address\"},{\"name\":\"parameter\",\"type\":\"address\"},{\"name\":\"emergency\",\"type\":\"address\"}]}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"broadcast\",\"inputs\":[{\"name\":\"_chain_id\",\"type\":\"uint256\"},{\"name\":\"_messages\",\"type\":\"tuple[]\",\"components\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\"}]}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_admins\",\"inputs\":[{\"name\":\"_future_admins\",\"type\":\"tuple\",\"components\":[{\"name\":\"ownership\",\"type\":\"address\"},{\"name\":\"parameter\",\"type\":\"address\"},{\"name\":\"emergency\",\"type\":\"address\"}]}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"apply_admins\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"admins\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"ownership\",\"type\":\"address\"},{\"name\":\"parameter\",\"type\":\"address\"},{\"name\":\"emergency\",\"type\":\"address\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_admins\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"ownership\",\"type\":\"address\"},{\"name\":\"parameter\",\"type\":\"address\"},{\"name\":\"emergency\",\"type\":\"address\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"nonce\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"uint256\"},{\"name\":\"arg1\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"digest\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"uint256\"},{\"name\":\"arg1\",\"type\":\"uint256\"},{\"name\":\"arg2\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}]}]","ContractName":"XYZ Broadcaster","CompilerVersion":"vyper:0.3.10","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"000000000000000000000000745748bcfd8f9c2de519a71d789be8a63dd7d66c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}