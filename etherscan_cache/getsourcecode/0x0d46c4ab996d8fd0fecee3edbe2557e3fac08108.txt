{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.3.9\r\n\r\n\r\n# Interfaces\r\n\r\nfrom vyper.interfaces import ERC165 as IERC165\r\nfrom vyper.interfaces import ERC721 as IERC721\r\n\r\ninterface IDelegationRegistry:\r\n    def delegateForToken(delegate: address, contract_: address, tokenId: uint256, value_: bool): nonpayable\r\n\r\n# Structs\r\n\r\n\r\n# Events\r\n\r\nevent OwnershipTransferred:\r\n    ownerIndexed: indexed(address)\r\n    proposedOwnerIndexed: indexed(address)\r\n    owner: address\r\n    proposedOwner: address\r\n\r\nevent OwnerProposed:\r\n    ownerIndexed: indexed(address)\r\n    proposedOwnerIndexed: indexed(address)\r\n    owner: address\r\n    proposedOwner: address\r\n\r\nevent CollateralVaultPeripheralAddressSet:\r\n    currentValue: address\r\n    newValue: address\r\n\r\n\r\n# Global variables\r\n\r\nvaultName: constant(String[30]) = \"erc721\"\r\n\r\nowner: public(address)\r\nproposedOwner: public(address)\r\n\r\ncollateralVaultPeripheralAddress: public(address)\r\ndelegationRegistry: public(IDelegationRegistry)\r\n\r\n##### INTERNAL METHODS #####\r\n\r\n\r\n@internal\r\ndef _setDelegation(_wallet: address, _collateralAddress: address, _tokenId: uint256, _value: bool):\r\n    self.delegationRegistry.delegateForToken(_wallet, _collateralAddress, _tokenId, _value)\r\n\r\n@view\r\n@internal\r\ndef _collateralOwner(_collateralAddress: address, _tokenId: uint256) -> address:\r\n    assert IERC165(_collateralAddress).supportsInterface(0x80ac58cd), \"collat addr is not a ERC721\"\r\n    return IERC721(_collateralAddress).ownerOf(_tokenId)\r\n\r\n##### EXTERNAL METHODS - VIEW #####\r\n\r\n@view\r\n@external\r\ndef vaultName() -> String[30]:\r\n    return vaultName\r\n\r\n@view\r\n@external\r\ndef onERC721Received(_operator: address, _from: address, _tokenId: uint256, _data: Bytes[1024]) -> bytes4:\r\n    return method_id(\"onERC721Received(address,address,uint256,bytes)\", output_type=bytes4)\r\n\r\n\r\n@view\r\n@external\r\ndef collateralOwner(_collateralAddress: address, _tokenId: uint256) -> address:\r\n    return self._collateralOwner(_collateralAddress, _tokenId)\r\n\r\n@view\r\n@external\r\ndef ownsCollateral(_collateralAddress: address, _tokenId: uint256) -> bool:\r\n    return self._collateralOwner(_collateralAddress, _tokenId) == self\r\n\r\n\r\n@view\r\n@external\r\ndef isCollateralApprovedForVault(_borrower: address, _collateralAddress: address, _tokenId: uint256) -> bool:\r\n    return IERC721(_collateralAddress).isApprovedForAll(_borrower, self) or IERC721(_collateralAddress).getApproved(_tokenId) == self\r\n\r\n\r\n##### EXTERNAL METHODS - WRITE #####\r\n@external\r\ndef __init__(_delegationRegistryAddress: address):\r\n    self.owner = msg.sender\r\n    self.delegationRegistry = IDelegationRegistry(_delegationRegistryAddress)\r\n\r\n\r\n@external\r\ndef proposeOwner(_address: address):\r\n    assert msg.sender == self.owner, \"msg.sender is not the owner\"\r\n    assert _address != empty(address), \"address it the zero address\"\r\n    assert self.owner != _address, \"proposed owner addr is the owner\"\r\n    assert self.proposedOwner != _address, \"proposed owner addr is the same\"\r\n\r\n    self.proposedOwner = _address\r\n\r\n    log OwnerProposed(\r\n        self.owner,\r\n        _address,\r\n        self.owner,\r\n        _address\r\n    )\r\n\r\n\r\n@external\r\ndef claimOwnership():\r\n    assert msg.sender == self.proposedOwner, \"msg.sender is not the proposed\"\r\n\r\n    log OwnershipTransferred(\r\n        self.owner,\r\n        self.proposedOwner,\r\n        self.owner,\r\n        self.proposedOwner\r\n    )\r\n\r\n    self.owner = self.proposedOwner\r\n    self.proposedOwner = empty(address)\r\n\r\n\r\n@external\r\ndef setCollateralVaultPeripheralAddress(_address: address):\r\n    assert msg.sender == self.owner, \"msg.sender is not the owner\"\r\n    assert _address != empty(address), \"address is the zero addr\"\r\n    assert self.collateralVaultPeripheralAddress != _address, \"new value is the same\"\r\n\r\n    log CollateralVaultPeripheralAddressSet(\r\n        self.collateralVaultPeripheralAddress,\r\n        _address\r\n    )\r\n\r\n    self.collateralVaultPeripheralAddress = _address\r\n\r\n\r\n@external\r\ndef storeCollateral(_wallet: address, _collateralAddress: address, _tokenId: uint256, _delegateWallet: address):\r\n    assert msg.sender == self.collateralVaultPeripheralAddress, \"msg.sender is not authorised\"\r\n\r\n    IERC721(_collateralAddress).safeTransferFrom(_wallet, self, _tokenId, b\"\")\r\n    if _delegateWallet != empty(address):\r\n        self._setDelegation(_delegateWallet, _collateralAddress, _tokenId, True)\r\n\r\n\r\n@external\r\ndef transferCollateral(_wallet: address, _collateralAddress: address, _tokenId: uint256, _delegateWallet: address):\r\n    assert msg.sender == self.collateralVaultPeripheralAddress, \"msg.sender is not authorised\"\r\n    assert _delegateWallet != empty(address), \"delegate is zero addr\"\r\n    assert self._collateralOwner(_collateralAddress, _tokenId) == self, \"collateral not owned by vault\"\r\n\r\n    IERC721(_collateralAddress).safeTransferFrom(self, _wallet, _tokenId, b\"\")\r\n    self._setDelegation(_delegateWallet, _collateralAddress, _tokenId, False)\r\n\r\n\r\n@external\r\ndef setDelegation(_wallet: address, _collateralAddress: address, _tokenId: uint256, _value: bool):\r\n    assert msg.sender == self.collateralVaultPeripheralAddress, \"msg.sender is not authorised\"\r\n\r\n    self._setDelegation(_wallet, _collateralAddress, _tokenId, _value)","ABI":"[{\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"ownerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"proposedOwnerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"proposedOwner\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"OwnerProposed\",\"inputs\":[{\"name\":\"ownerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"proposedOwnerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"proposedOwner\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"CollateralVaultPeripheralAddressSet\",\"inputs\":[{\"name\":\"currentValue\",\"type\":\"address\",\"indexed\":false},{\"name\":\"newValue\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"vaultName\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"onERC721Received\",\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"collateralOwner\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ownsCollateral\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isCollateralApprovedForVault\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_delegationRegistryAddress\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"proposeOwner\",\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"claimOwnership\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setCollateralVaultPeripheralAddress\",\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"storeCollateral\",\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_delegateWallet\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferCollateral\",\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_delegateWallet\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setDelegation\",\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"proposedOwner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"collateralVaultPeripheralAddress\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"delegationRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.3.9","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"00000000000000000000000000000000000076a84fef008cdabe6409d2fe638b","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}