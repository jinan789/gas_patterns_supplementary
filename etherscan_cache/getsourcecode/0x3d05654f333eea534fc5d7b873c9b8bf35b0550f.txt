{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.3.10\r\n\r\n\"\"\"\r\n@title yPRISMA Forwarder Callback Minter\r\n@license GNU AGPLv3\r\n@author Yearn Finance\r\n\"\"\"\r\nfrom vyper.interfaces import ERC20\r\n\r\ninterface IYPRISMA:\r\n    def delegate_mint(_recipient: address, _amount: uint256) -> uint256: nonpayable\r\n    def ylocker() -> address: view\r\n\r\ninterface IYLOCKER:\r\n    def proxy() -> address: view\r\n    def governance() -> address: view\r\n\r\ninterface IYPROXY:\r\n    def collectTokensFromLocker(token: address, amount: uint256, recipient: address) -> uint256: nonpayable\r\n\r\nevent FeesConfigured:\r\n    fee_on_mints: uint256\r\n    fee_on_rentals: uint256\r\n\r\nevent RewardTokenSet:\r\n    token: indexed(address)\r\n\r\nPRECISION: constant(uint256) = 10_000\r\nYPRISMA: public(constant(address)) =        0xe3668873D944E4A949DA05fc8bDE419eFF543882\r\nYEARN_LOCKER: public(immutable(address))\r\nFACTORY: public(immutable(address))\r\nfee_on_mints: public(uint256)\r\nfee_on_rentals: public(uint256)\r\nreward_tokens: public(DynArray[address, 10])\r\n\r\n@external\r\ndef __init__(\r\n    _factory: address,\r\n    _fee_on_mints: uint256,\r\n    _fee_on_rentals: uint256\r\n):\r\n    YEARN_LOCKER = IYPRISMA(YPRISMA).ylocker()\r\n    FACTORY = _factory\r\n    self.fee_on_mints = _fee_on_mints\r\n    self.fee_on_mints = _fee_on_rentals\r\n\r\n@external\r\ndef getFeePct(\r\n    claimant: address,\r\n    receiver: address,\r\n    boost_delegate: address,\r\n    amount: uint256,\r\n    previous_amount: uint256,\r\n    total_weekly_emissions: uint256\r\n) -> uint256:\r\n\r\n    if receiver == YEARN_LOCKER:\r\n        return self.fee_on_mints\r\n\r\n    return self.fee_on_rentals\r\n\r\n@external\r\ndef delegateCallback(\r\n    _claimant: address,\r\n    _receiver: address,\r\n    _boost_delegate: address,\r\n    _amount: uint256,\r\n    _adjusted_amount: uint256,\r\n    _fee: uint256,\r\n    _previous_amount: uint256,\r\n    _total_weekly_emissions: uint256\r\n) -> bool:\r\n    \"\"\"\r\n    @dev \r\n        logic here will execute when Yearn boost is \r\n        selected as a boost delegate\r\n    \"\"\"\r\n    assert msg.sender == FACTORY, \"!factory\"\r\n    return True\r\n\r\n@external\r\ndef receiverCallback(\r\n    _claimant: address,\r\n    _receiver: address,\r\n    _adjusted_amount: uint256\r\n) -> bool:\r\n    \"\"\"\r\n    @notice Allow users to mint yPRISMA using boost from any delegate.\r\n    \"\"\"\r\n    assert msg.sender == FACTORY, \"!factory\"\r\n\r\n    if _receiver != YEARN_LOCKER: # Don't mint if not locking to ylocker\r\n        return True\r\n\r\n    # Mint yPRISMA\r\n    IYPRISMA(YPRISMA).delegate_mint(\r\n        _claimant, \r\n        (_adjusted_amount / 10 ** 18) * 10 ** 18 # We must trim precision to match the actual lock amount\r\n    )\r\n\r\n    # Fetch any extra rewards earned by users\r\n    for token in self.reward_tokens:\r\n        amount: uint256 = ERC20(token).balanceOf(YEARN_LOCKER)\r\n        if amount == 0:\r\n            continue\r\n\r\n        IYPROXY(\r\n            IYLOCKER(YEARN_LOCKER).proxy()\r\n        ).collectTokensFromLocker(token, amount, _claimant)\r\n\r\n    return True\r\n\r\n@external\r\ndef configure_fees(_fee_on_mints: uint256, _fee_on_rentals: uint256):\r\n    assert (\r\n        msg.sender == IYLOCKER(YEARN_LOCKER).governance() or \r\n        msg.sender == YEARN_LOCKER\r\n    ), \"!authorized\"\r\n    assert _fee_on_mints <= PRECISION\r\n    assert _fee_on_rentals <= PRECISION\r\n    self.fee_on_mints = _fee_on_mints\r\n    self.fee_on_rentals = _fee_on_rentals\r\n    log FeesConfigured(_fee_on_mints, _fee_on_rentals)\r\n\r\n@external\r\ndef set_reward_tokens(_token_addresses: DynArray[address, 10]):\r\n    assert (\r\n        msg.sender == IYLOCKER(YEARN_LOCKER).governance() or \r\n        msg.sender == YEARN_LOCKER\r\n    ), \"!authorized\"\r\n    self.reward_tokens = _token_addresses\r\n    for token in _token_addresses:\r\n        log RewardTokenSet(token)","ABI":"[{\"name\":\"FeesConfigured\",\"inputs\":[{\"name\":\"fee_on_mints\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"fee_on_rentals\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"RewardTokenSet\",\"inputs\":[{\"name\":\"token\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_factory\",\"type\":\"address\"},{\"name\":\"_fee_on_mints\",\"type\":\"uint256\"},{\"name\":\"_fee_on_rentals\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"getFeePct\",\"inputs\":[{\"name\":\"claimant\",\"type\":\"address\"},{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"boost_delegate\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"previous_amount\",\"type\":\"uint256\"},{\"name\":\"total_weekly_emissions\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"delegateCallback\",\"inputs\":[{\"name\":\"_claimant\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_boost_delegate\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_adjusted_amount\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"},{\"name\":\"_previous_amount\",\"type\":\"uint256\"},{\"name\":\"_total_weekly_emissions\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"receiverCallback\",\"inputs\":[{\"name\":\"_claimant\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_adjusted_amount\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"configure_fees\",\"inputs\":[{\"name\":\"_fee_on_mints\",\"type\":\"uint256\"},{\"name\":\"_fee_on_rentals\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_reward_tokens\",\"inputs\":[{\"name\":\"_token_addresses\",\"type\":\"address[]\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"YPRISMA\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"YEARN_LOCKER\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"FACTORY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"fee_on_mints\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"fee_on_rentals\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"reward_tokens\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]}]","ContractName":"yPRISMA Forwarder Callback Minter","CompilerVersion":"vyper:0.3.10","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"000000000000000000000000d39164369c37c412a04603666dcf4c7b3313774800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001388","EVMVersion":"Default","Library":"","LicenseType":"GNU AGPLv3","Proxy":"0","Implementation":"","SwarmSource":""}]}