{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.3.9\r\n\r\n\r\n# Interfaces\r\n\r\ninterface ILoansPeripheral:\r\n    def lendingPoolPeripheralContract() -> address: view\r\n\r\ninterface ILendingPoolPeripheral:\r\n    def erc20TokenContract() -> address: view\r\n\r\n\r\n# Structs\r\n\r\nstruct Collateral:\r\n    contractAddress: address\r\n    tokenId: uint256\r\n    amount: uint256\r\n\r\nstruct Loan:\r\n    id: uint256\r\n    amount: uint256\r\n    interest: uint256 # parts per 10000, e.g. 2.5% is represented by 250 parts per 10000\r\n    maturity: uint256\r\n    startTime: uint256\r\n    collaterals: DynArray[Collateral, 100]\r\n    paidPrincipal: uint256\r\n    paidInterestAmount: uint256\r\n    started: bool\r\n    invalidated: bool\r\n    paid: bool\r\n    defaulted: bool\r\n    canceled: bool\r\n\r\nstruct TopStats:\r\n    highestSingleCollateralLoan: Loan\r\n    highestCollateralBundleLoan: Loan\r\n    highestRepayment: Loan\r\n    highestDefaultedLoan: Loan\r\n\r\n\r\n# Events\r\n\r\nevent OwnerProposed:\r\n    ownerIndexed: indexed(address)\r\n    proposedOwnerIndexed: indexed(address)\r\n    owner: address\r\n    proposedOwner: address\r\n    erc20TokenContract: address\r\n\r\nevent OwnershipTransferred:\r\n    ownerIndexed: indexed(address)\r\n    proposedOwnerIndexed: indexed(address)\r\n    owner: address\r\n    proposedOwner: address\r\n    erc20TokenContract: address\r\n\r\nevent LoansPeripheralAddressSet:\r\n    erc20TokenContractIndexed: indexed(address)\r\n    currentValue: address\r\n    newValue: address\r\n    erc20TokenContract: address\r\n\r\n\r\n# Global variables\r\n\r\nowner: public(address)\r\nproposedOwner: public(address)\r\n\r\nloansPeripheral: public(address)\r\n\r\nloans: HashMap[address, DynArray[Loan, 2**16]]\r\nborrowedAmount: public(HashMap[address, uint256])\r\nongoingLoans: public(HashMap[address, uint256])\r\n\r\n# key: bytes32 == _abi_encoded(token_address, token_id) -> map(borrower_address, loan_id)\r\ncollateralsInLoans: public(HashMap[bytes32, HashMap[address, uint256]]) # given a collateral and a borrower, what is the loan id\r\ncollateralsInLoansUsed: public(HashMap[bytes32, HashMap[address, HashMap[uint256, bool]]]) # given a collateral, a borrower and a loan id, is the collateral still used in that loan id\r\ncollateralKeys: DynArray[bytes32, 2**20] # array of collaterals expressed by their keys\r\ncollateralsUsed: public(HashMap[bytes32, bool]) # given a collateral, is it being used in a loan\r\ncollateralsData: public(HashMap[bytes32, Collateral]) # given a collateral key, what is its data\r\ncollateralsIdsByAddress: HashMap[address, DynArray[uint256, 2**20]] # given a collateral address, what are the token ids that were already in a loan\r\n\r\ncollectionsBorrowedAmount: public(HashMap[address, uint256])\r\n\r\n# Stats\r\ntopStats: TopStats\r\n\r\n\r\n##### INTERNAL METHODS #####\r\n\r\n@view\r\n@internal\r\ndef _isLoanCreated(_borrower: address, _loanId: uint256) -> bool:\r\n    return _loanId < len(self.loans[_borrower])\r\n\r\n\r\n@view\r\n@internal\r\ndef _isLoanStarted(_borrower: address, _loanId: uint256) -> bool:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].started\r\n    return False\r\n\r\n\r\n@view\r\n@internal\r\ndef _isLoanInvalidated(_borrower: address, _loanId: uint256) -> bool:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].invalidated\r\n    return False\r\n\r\n\r\n@pure\r\n@internal\r\ndef _computeCollateralKey(_collateralAddress: address, _collateralId: uint256) -> bytes32:\r\n  return keccak256(_abi_encode(_collateralAddress, convert(_collateralId, bytes32)))\r\n\r\n\r\n@internal\r\ndef _addCollateralToLoan(_borrower: address, _collateral: Collateral, _loanId: uint256):\r\n  key: bytes32 = self._computeCollateralKey(_collateral.contractAddress, _collateral.tokenId)\r\n  self.collateralsInLoans[key][_borrower] = _loanId\r\n  self.collateralsInLoansUsed[key][_borrower][_loanId] = True\r\n\r\n\r\n@internal\r\ndef _removeCollateralFromLoan(_borrower: address, _collateral: Collateral, _loanId: uint256):\r\n  key: bytes32 = self._computeCollateralKey(_collateral.contractAddress, _collateral.tokenId)\r\n  self.collateralsInLoansUsed[key][_borrower][_loanId] = False\r\n\r\n\r\n@internal\r\ndef _updateCollaterals(_collateral: Collateral, _toRemove: bool):\r\n  key: bytes32 = self._computeCollateralKey(_collateral.contractAddress, _collateral.tokenId)\r\n\r\n  if key not in self.collateralKeys and not _toRemove:\r\n    self.collateralKeys.append(key)\r\n    self.collateralsUsed[key] = True\r\n    self.collateralsData[key] = _collateral\r\n  elif key in self.collateralKeys:\r\n    self.collateralsUsed[key] = not _toRemove\r\n\r\n  if _collateral.tokenId not in self.collateralsIdsByAddress[_collateral.contractAddress] and not _toRemove:\r\n    self.collateralsIdsByAddress[_collateral.contractAddress].append(_collateral.tokenId)\r\n\r\n\r\n@internal\r\ndef _addLoan(_borrower: address, _loan: Loan) -> bool:\r\n    if _loan.id == len(self.loans[_borrower]):\r\n        self.loans[_borrower].append(_loan)\r\n        self.ongoingLoans[_borrower] += 1\r\n        return True\r\n    return False\r\n\r\n\r\n##### EXTERNAL METHODS #####\r\n\r\n@external\r\ndef __init__():\r\n    self.owner = msg.sender\r\n\r\n\r\n@external\r\ndef proposeOwner(_address: address):\r\n    assert msg.sender == self.owner, \"msg.sender is not the owner\"\r\n    assert _address != empty(address), \"_address it the zero address\"\r\n    assert self.owner != _address, \"proposed owner addr is the owner\"\r\n    assert self.proposedOwner != _address, \"proposed owner addr is the same\"\r\n\r\n    self.proposedOwner = _address\r\n\r\n    log OwnerProposed(\r\n        self.owner,\r\n        _address,\r\n        self.owner,\r\n        _address,\r\n        ILendingPoolPeripheral(\r\n            ILoansPeripheral(self.loansPeripheral).lendingPoolPeripheralContract()\r\n        ).erc20TokenContract()\r\n    )\r\n\r\n\r\n@external\r\ndef claimOwnership():\r\n    assert msg.sender == self.proposedOwner, \"msg.sender is not the proposed\"\r\n\r\n    log OwnershipTransferred(\r\n        self.owner,\r\n        self.proposedOwner,\r\n        self.owner,\r\n        self.proposedOwner,\r\n        ILendingPoolPeripheral(\r\n            ILoansPeripheral(self.loansPeripheral).lendingPoolPeripheralContract()\r\n        ).erc20TokenContract()\r\n    )\r\n\r\n    self.owner = self.proposedOwner\r\n    self.proposedOwner = empty(address)\r\n\r\n\r\n@external\r\ndef setLoansPeripheral(_address: address):\r\n    assert msg.sender == self.owner, \"msg.sender is not the owner\"\r\n    assert _address != empty(address), \"_address is the zero address\"\r\n    assert _address != self.loansPeripheral, \"new loans addr is the same\"\r\n\r\n    log LoansPeripheralAddressSet(\r\n        ILendingPoolPeripheral(\r\n            ILoansPeripheral(_address).lendingPoolPeripheralContract()\r\n        ).erc20TokenContract(),\r\n        self.loansPeripheral,\r\n        _address,\r\n        ILendingPoolPeripheral(\r\n            ILoansPeripheral(_address).lendingPoolPeripheralContract()\r\n        ).erc20TokenContract()\r\n    )\r\n\r\n    self.loansPeripheral = _address\r\n\r\n\r\n@view\r\n@external\r\ndef isLoanCreated(_borrower: address, _loanId: uint256) -> bool:\r\n    return self._isLoanCreated(_borrower, _loanId)\r\n\r\n\r\n@view\r\n@external\r\ndef isLoanStarted(_borrower: address, _loanId: uint256) -> bool:\r\n    return self._isLoanStarted(_borrower, _loanId)\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanAmount(_borrower: address, _loanId: uint256) -> uint256:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].amount\r\n    return 0\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanMaturity(_borrower: address, _loanId: uint256) -> uint256:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].maturity\r\n    return 0\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanInterest(_borrower: address, _loanId: uint256) -> uint256:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].interest\r\n    return 0\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanCollaterals(_borrower: address, _loanId: uint256) -> DynArray[Collateral, 100]:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].collaterals\r\n    return empty(DynArray[Collateral, 100])\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanStartTime(_borrower: address, _loanId: uint256) -> uint256:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].startTime\r\n    return max_value(uint256)\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanPaidPrincipal(_borrower: address, _loanId: uint256) -> uint256:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].paidPrincipal\r\n    return 0\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanPaidInterestAmount(_borrower: address, _loanId: uint256) -> uint256:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].paidInterestAmount\r\n    return 0\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanStarted(_borrower: address, _loanId: uint256) -> bool:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].started\r\n    return False\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanInvalidated(_borrower: address, _loanId: uint256) -> bool:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].invalidated\r\n    return False\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanPaid(_borrower: address, _loanId: uint256) -> bool:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].paid\r\n    return False\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanDefaulted(_borrower: address, _loanId: uint256) -> bool:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].defaulted\r\n    return False\r\n\r\n\r\n@view\r\n@external\r\ndef getLoanCanceled(_borrower: address, _loanId: uint256) -> bool:\r\n    if _loanId < len(self.loans[_borrower]):\r\n        return self.loans[_borrower][_loanId].canceled\r\n    return False\r\n\r\n\r\n@view\r\n@external\r\ndef getPendingLoan(_borrower: address, _loanId: uint256) -> Loan:\r\n  if self._isLoanCreated(_borrower, _loanId) and not self._isLoanStarted(_borrower, _loanId) and not self._isLoanInvalidated(_borrower, _loanId):\r\n    return self.loans[_borrower][_loanId]\r\n  return empty(Loan)\r\n\r\n\r\n@view\r\n@external\r\ndef getLoan(_borrower: address, _loanId: uint256) -> Loan:\r\n  if self._isLoanStarted(_borrower, _loanId) or self._isLoanInvalidated(_borrower, _loanId):\r\n    return self.loans[_borrower][_loanId]\r\n  return empty(Loan)\r\n\r\n\r\n@view\r\n@external\r\ndef getHighestSingleCollateralLoan() -> Loan:\r\n    return self.topStats.highestSingleCollateralLoan\r\n\r\n\r\n@view\r\n@external\r\ndef getHighestCollateralBundleLoan() -> Loan:\r\n    return self.topStats.highestCollateralBundleLoan\r\n\r\n\r\n@view\r\n@external\r\ndef getHighestRepayment() -> Loan:\r\n    return self.topStats.highestRepayment\r\n\r\n\r\n@view\r\n@external\r\ndef getHighestDefaultedLoan() -> Loan:\r\n    return self.topStats.highestDefaultedLoan\r\n\r\n\r\n@view\r\n@external\r\ndef collateralKeysArray() -> DynArray[bytes32, 2**20]:\r\n  return self.collateralKeys\r\n\r\n\r\n@view\r\n@external\r\ndef getCollateralsIdsByAddress(_address: address) -> DynArray[uint256, 2**20]:\r\n  return self.collateralsIdsByAddress[_address]\r\n\r\n\r\n@external\r\ndef addCollateralToLoan(_borrower: address, _collateral: Collateral, _loanId: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n    assert self._isLoanCreated(_borrower, _loanId), \"loan not found\"\r\n\r\n    self._addCollateralToLoan(_borrower, _collateral, _loanId)\r\n\r\n\r\n@external\r\ndef removeCollateralFromLoan(_borrower: address, _collateral: Collateral, _loanId: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n    assert self._isLoanCreated(_borrower, _loanId), \"loan not found\"\r\n    \r\n    self._removeCollateralFromLoan(_borrower, _collateral, _loanId)\r\n\r\n\r\n@external\r\ndef updateCollaterals(_collateral: Collateral, _toRemove: bool):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n\r\n    self._updateCollaterals(_collateral, _toRemove)\r\n\r\n\r\n@external\r\ndef addLoan(\r\n    _borrower: address,\r\n    _amount: uint256,\r\n    _interest: uint256,\r\n    _maturity: uint256,\r\n    _collaterals: DynArray[Collateral, 100]\r\n) -> uint256:\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n\r\n    newLoan: Loan = Loan(\r\n        {\r\n            id: len(self.loans[_borrower]),\r\n            amount: _amount,\r\n            interest: _interest,\r\n            maturity: _maturity,\r\n            startTime: 0,\r\n            collaterals: _collaterals,\r\n            paidPrincipal: 0,\r\n            paidInterestAmount: 0,\r\n            started: False,\r\n            invalidated: False,\r\n            paid: False,\r\n            defaulted: False,\r\n            canceled: False,\r\n        }\r\n    )\r\n\r\n    result: bool = self._addLoan(_borrower, newLoan)\r\n    if not result:\r\n        raise \"adding loan for borrower failed\"\r\n\r\n    return newLoan.id\r\n\r\n\r\n@external\r\ndef updateLoanStarted(_borrower: address, _loanId: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n\r\n    self.loans[_borrower][_loanId].startTime = block.timestamp\r\n    self.loans[_borrower][_loanId].started = True\r\n\r\n    self.borrowedAmount[_borrower] += self.loans[_borrower][_loanId].amount\r\n\r\n    for collateral in self.loans[_borrower][_loanId].collaterals:\r\n        self.collectionsBorrowedAmount[collateral.contractAddress] += collateral.amount\r\n\r\n\r\n@external\r\ndef updateLoanPaidAmount(_borrower: address, _loanId: uint256, _paidPrincipal: uint256, _paidInterestAmount: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n  \r\n    self.loans[_borrower][_loanId].paidPrincipal += _paidPrincipal\r\n    self.loans[_borrower][_loanId].paidInterestAmount += _paidInterestAmount\r\n\r\n\r\n@external\r\ndef updatePaidLoan(_borrower: address, _loanId: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n\r\n    self.loans[_borrower][_loanId].paid = True\r\n\r\n    self.borrowedAmount[_borrower] -= self.loans[_borrower][_loanId].amount\r\n\r\n    self.ongoingLoans[_borrower] -= 1\r\n\r\n    for collateral in self.loans[_borrower][_loanId].collaterals:\r\n        self.collectionsBorrowedAmount[collateral.contractAddress] -= collateral.amount\r\n\r\n\r\n@external\r\ndef updateDefaultedLoan(_borrower: address, _loanId: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n\r\n    self.loans[_borrower][_loanId].defaulted = True\r\n\r\n    self.borrowedAmount[_borrower] -= self.loans[_borrower][_loanId].amount\r\n\r\n    self.ongoingLoans[_borrower] -= 1\r\n\r\n    for collateral in self.loans[_borrower][_loanId].collaterals:\r\n        self.collectionsBorrowedAmount[collateral.contractAddress] -= collateral.amount\r\n\r\n\r\n@external\r\ndef updateHighestSingleCollateralLoan(_borrower: address, _loanId: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n  \r\n    if len(self.loans[_borrower][_loanId].collaterals) == 1 and self.topStats.highestSingleCollateralLoan.amount < self.loans[_borrower][_loanId].amount:\r\n        self.topStats.highestSingleCollateralLoan = self.loans[_borrower][_loanId]\r\n  \r\n\r\n@external\r\ndef updateHighestCollateralBundleLoan(_borrower: address, _loanId: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n\r\n    if len(self.loans[_borrower][_loanId].collaterals) > 1 and self.topStats.highestCollateralBundleLoan.amount < self.loans[_borrower][_loanId].amount:\r\n        self.topStats.highestCollateralBundleLoan = self.loans[_borrower][_loanId]\r\n\r\n\r\n@external\r\ndef updateHighestRepayment(_borrower: address, _loanId: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n\r\n    if self.topStats.highestRepayment.amount < self.loans[_borrower][_loanId].amount:\r\n        self.topStats.highestRepayment = self.loans[_borrower][_loanId]\r\n\r\n\r\n@external\r\ndef updateHighestDefaultedLoan(_borrower: address, _loanId: uint256):\r\n    assert msg.sender == self.loansPeripheral, \"msg.sender is not the loans addr\"\r\n\r\n    if self.topStats.highestDefaultedLoan.amount < self.loans[_borrower][_loanId].amount:\r\n        self.topStats.highestDefaultedLoan = self.loans[_borrower][_loanId]","ABI":"[{\"name\":\"OwnerProposed\",\"inputs\":[{\"name\":\"ownerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"proposedOwnerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"proposedOwner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"erc20TokenContract\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"ownerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"proposedOwnerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"proposedOwner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"erc20TokenContract\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"LoansPeripheralAddressSet\",\"inputs\":[{\"name\":\"erc20TokenContractIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"currentValue\",\"type\":\"address\",\"indexed\":false},{\"name\":\"newValue\",\"type\":\"address\",\"indexed\":false},{\"name\":\"erc20TokenContract\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"proposeOwner\",\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"claimOwnership\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setLoansPeripheral\",\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isLoanCreated\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isLoanStarted\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanAmount\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanMaturity\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanInterest\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanCollaterals\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple[]\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanStartTime\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanPaidPrincipal\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanPaidInterestAmount\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanStarted\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanInvalidated\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanPaid\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanDefaulted\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoanCanceled\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getPendingLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"interest\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"collaterals\",\"type\":\"tuple[]\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]},{\"name\":\"paidPrincipal\",\"type\":\"uint256\"},{\"name\":\"paidInterestAmount\",\"type\":\"uint256\"},{\"name\":\"started\",\"type\":\"bool\"},{\"name\":\"invalidated\",\"type\":\"bool\"},{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"defaulted\",\"type\":\"bool\"},{\"name\":\"canceled\",\"type\":\"bool\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"interest\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"collaterals\",\"type\":\"tuple[]\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]},{\"name\":\"paidPrincipal\",\"type\":\"uint256\"},{\"name\":\"paidInterestAmount\",\"type\":\"uint256\"},{\"name\":\"started\",\"type\":\"bool\"},{\"name\":\"invalidated\",\"type\":\"bool\"},{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"defaulted\",\"type\":\"bool\"},{\"name\":\"canceled\",\"type\":\"bool\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getHighestSingleCollateralLoan\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"interest\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"collaterals\",\"type\":\"tuple[]\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]},{\"name\":\"paidPrincipal\",\"type\":\"uint256\"},{\"name\":\"paidInterestAmount\",\"type\":\"uint256\"},{\"name\":\"started\",\"type\":\"bool\"},{\"name\":\"invalidated\",\"type\":\"bool\"},{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"defaulted\",\"type\":\"bool\"},{\"name\":\"canceled\",\"type\":\"bool\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getHighestCollateralBundleLoan\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"interest\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"collaterals\",\"type\":\"tuple[]\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]},{\"name\":\"paidPrincipal\",\"type\":\"uint256\"},{\"name\":\"paidInterestAmount\",\"type\":\"uint256\"},{\"name\":\"started\",\"type\":\"bool\"},{\"name\":\"invalidated\",\"type\":\"bool\"},{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"defaulted\",\"type\":\"bool\"},{\"name\":\"canceled\",\"type\":\"bool\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getHighestRepayment\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"interest\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"collaterals\",\"type\":\"tuple[]\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]},{\"name\":\"paidPrincipal\",\"type\":\"uint256\"},{\"name\":\"paidInterestAmount\",\"type\":\"uint256\"},{\"name\":\"started\",\"type\":\"bool\"},{\"name\":\"invalidated\",\"type\":\"bool\"},{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"defaulted\",\"type\":\"bool\"},{\"name\":\"canceled\",\"type\":\"bool\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getHighestDefaultedLoan\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"interest\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"collaterals\",\"type\":\"tuple[]\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]},{\"name\":\"paidPrincipal\",\"type\":\"uint256\"},{\"name\":\"paidInterestAmount\",\"type\":\"uint256\"},{\"name\":\"started\",\"type\":\"bool\"},{\"name\":\"invalidated\",\"type\":\"bool\"},{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"defaulted\",\"type\":\"bool\"},{\"name\":\"canceled\",\"type\":\"bool\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"collateralKeysArray\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getCollateralsIdsByAddress\",\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"addCollateralToLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_collateral\",\"type\":\"tuple\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"removeCollateralFromLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_collateral\",\"type\":\"tuple\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateCollaterals\",\"inputs\":[{\"name\":\"_collateral\",\"type\":\"tuple\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]},{\"name\":\"_toRemove\",\"type\":\"bool\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"addLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_interest\",\"type\":\"uint256\"},{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_collaterals\",\"type\":\"tuple[]\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateLoanStarted\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateLoanPaidAmount\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"},{\"name\":\"_paidPrincipal\",\"type\":\"uint256\"},{\"name\":\"_paidInterestAmount\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updatePaidLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateDefaultedLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateHighestSingleCollateralLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateHighestCollateralBundleLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateHighestRepayment\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateHighestDefaultedLoan\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"proposedOwner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"loansPeripheral\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"borrowedAmount\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ongoingLoans\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"collateralsInLoans\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"bytes32\"},{\"name\":\"arg1\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"collateralsInLoansUsed\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"bytes32\"},{\"name\":\"arg1\",\"type\":\"address\"},{\"name\":\"arg2\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"collateralsUsed\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"collateralsData\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"collectionsBorrowedAmount\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.3.9","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}