{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.3.10\r\n\"\"\"\r\n@title Gauge factory\r\n@author Yearn Finance\r\n@license GNU AGPLv3\r\n@notice\r\n    Permissionless deployment of gauges.\r\n    Gauges are minimal proxies to a gauge implementation contract\r\n\"\"\"\r\n\r\ninterface Gauge:\r\n    def initialize(_asset: address, _owner: address, _controller: address, _data: Bytes[1024]): nonpayable\r\n\r\nmanagement: public(address)\r\npending_management: public(address)\r\nversion: public(uint256)\r\nimplementation: public(address)\r\ngauge_owner: public(address)\r\ncontroller: public(address)\r\ngauge_versions: public(HashMap[address, uint256])\r\n\r\nevent GaugeDeployed:\r\n    asset: indexed(address)\r\n    gauge: address\r\n\r\nevent SetImplementation:\r\n    version: uint256\r\n    implementation: address\r\n\r\nevent SetGaugeOwner:\r\n    owner: address\r\n\r\nevent SetController:\r\n    controller: address\r\n\r\nevent PendingManagement:\r\n    management: indexed(address)\r\n\r\nevent SetManagement:\r\n    management: indexed(address)\r\n\r\nevent SetLegacyGauge:\r\n    gauge: address\r\n\r\n@external\r\ndef __init__(_controller: address):\r\n    \"\"\"\r\n    @notice Constructor\r\n    @param _controller Gauge controller\r\n    \"\"\"\r\n    self.management = msg.sender\r\n    self.gauge_owner = msg.sender\r\n    self.version = 1\r\n    self.controller = _controller\r\n\r\n@external\r\ndef deploy_gauge(_asset: address, _data: Bytes[1024] = b\"\") -> address:\r\n    \"\"\"\r\n    @notice Deploy a new gauge\r\n    @param _asset The underlying asset for the gauge\r\n    @param _data Additional data to pass on to the gauge during initialization (unused)\r\n    \"\"\"\r\n    assert _asset != empty(address)\r\n    version: uint256 = self.version\r\n    assert version > 1\r\n\r\n    gauge: address = create_minimal_proxy_to(self.implementation)\r\n    Gauge(gauge).initialize(_asset, self.gauge_owner, self.controller, _data)\r\n    self.gauge_versions[gauge] = version\r\n    log GaugeDeployed(_asset, gauge)\r\n    return gauge\r\n\r\n@external\r\ndef set_implementation(_implementation: address) -> uint256:\r\n    \"\"\"\r\n    @notice Set a new gauge implementation contract\r\n    @param _implementation Implementation contract address\r\n    @return New gauge version number\r\n    @dev Only callable by management\r\n    \"\"\"\r\n    \r\n    assert msg.sender == self.management\r\n    assert _implementation != empty(address)\r\n    version: uint256 = self.version + 1\r\n    self.version = version\r\n    self.implementation = _implementation\r\n    log SetImplementation(version, _implementation)\r\n    return version\r\n\r\n@external\r\ndef set_gauge_owner(_gauge_owner: address):\r\n    \"\"\"\r\n    @notice Set a new owner for future gauges\r\n    @param _gauge_owner New gauge owner\r\n    @dev Only callable by management\r\n    \"\"\"\r\n    assert msg.sender == self.management\r\n    self.gauge_owner = _gauge_owner\r\n    log SetGaugeOwner(_gauge_owner)\r\n\r\n@external\r\ndef set_controller(_controller: address):\r\n    \"\"\"\r\n    @notice Set a new gauge controller\r\n    @param _controller New gauge controller\r\n    @dev Only callable by management\r\n    \"\"\"\r\n    assert msg.sender == self.management\r\n    assert _controller != empty(address)\r\n    self.controller = _controller\r\n    log SetController(_controller)\r\n\r\n@external\r\ndef set_legacy_gauges(_gauges: DynArray[address, 8]):\r\n    \"\"\"\r\n    @notice Mark gauges as legacy\r\n    @param _gauges Gauges to be marked\r\n    @dev Only callable by management\r\n    \"\"\"\r\n    assert msg.sender == self.management\r\n    for gauge in _gauges:\r\n        assert self.gauge_versions[gauge] == 0\r\n        self.gauge_versions[gauge] = 1\r\n        log SetLegacyGauge(gauge)\r\n\r\n@external\r\ndef set_management(_management: address):\r\n    \"\"\"\r\n    @notice \r\n        Set the pending management address.\r\n        Needs to be accepted by that account separately to transfer management over\r\n    @param _management New pending management address\r\n    \"\"\"\r\n    assert msg.sender == self.management\r\n    self.pending_management = _management\r\n    log PendingManagement(_management)\r\n\r\n@external\r\ndef accept_management():\r\n    \"\"\"\r\n    @notice \r\n        Accept management role.\r\n        Can only be called by account previously marked as pending management by current management\r\n    \"\"\"\r\n    assert msg.sender == self.pending_management\r\n    self.pending_management = empty(address)\r\n    self.management = msg.sender\r\n    log SetManagement(msg.sender)","ABI":"[{\"name\":\"GaugeDeployed\",\"inputs\":[{\"name\":\"asset\",\"type\":\"address\",\"indexed\":true},{\"name\":\"gauge\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"SetImplementation\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"implementation\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"SetGaugeOwner\",\"inputs\":[{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"SetController\",\"inputs\":[{\"name\":\"controller\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"PendingManagement\",\"inputs\":[{\"name\":\"management\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"SetManagement\",\"inputs\":[{\"name\":\"management\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"SetLegacyGauge\",\"inputs\":[{\"name\":\"gauge\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_controller\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"deploy_gauge\",\"inputs\":[{\"name\":\"_asset\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"deploy_gauge\",\"inputs\":[{\"name\":\"_asset\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_implementation\",\"inputs\":[{\"name\":\"_implementation\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_gauge_owner\",\"inputs\":[{\"name\":\"_gauge_owner\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_controller\",\"inputs\":[{\"name\":\"_controller\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_legacy_gauges\",\"inputs\":[{\"name\":\"_gauges\",\"type\":\"address[]\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_management\",\"inputs\":[{\"name\":\"_management\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_management\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"management\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"pending_management\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"version\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"implementation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"gauge_owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"controller\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"gauge_versions\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]}]","ContractName":"Gauge factory","CompilerVersion":"vyper:0.3.10","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"00000000000000000000000046b38522422d597ddbaa2d6e98d6c9b397028d5b","EVMVersion":"Default","Library":"","LicenseType":"GNU AGPLv3","Proxy":"0","Implementation":"","SwarmSource":""}]}