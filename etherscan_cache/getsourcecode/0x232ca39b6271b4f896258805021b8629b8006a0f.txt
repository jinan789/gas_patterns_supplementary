{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.3.10\r\n\"\"\"\r\n@title Curve Bridge Wrapper\r\n\"\"\"\r\nfrom vyper.interfaces import ERC20\r\n\r\n\r\ninterface Bridge:\r\n    def bridge(_amount: uint256, _receiver: address, _refund: address): payable\r\n    def quote() -> uint256: view\r\n\r\n\r\nCRV20: constant(address) = 0xD533a949740bb3306d119CC777fa900bA034cd52\r\nBRIDGE: constant(address) = 0xC91113B4Dd89dd20FDEECDAC82477Bc99A840355\r\n\r\n\r\n@external\r\ndef __init__():\r\n    assert ERC20(CRV20).approve(BRIDGE, max_value(uint256))\r\n\r\n\r\n@payable\r\n@external\r\ndef bridge(_token: address, _to: address, _amount: uint256):\r\n    \"\"\"\r\n    @notice Bridge a token to Polygon mainnet\r\n    @param _token The token to bridge\r\n    @param _to The address to deposit the token to on polygon\r\n    @param _amount The amount of the token to bridge\r\n    \"\"\"\r\n    assert ERC20(_token).transferFrom(msg.sender, self, _amount)\r\n\r\n    Bridge(BRIDGE).bridge(_amount, _to, msg.sender, value=msg.value)\r\n\r\n\r\n@pure\r\n@external\r\ndef cost() -> uint256:\r\n    \"\"\"\r\n    @notice Cost in ETH to bridge\r\n    \"\"\"\r\n    return Bridge(BRIDGE).quote()\r\n\r\n\r\n@pure\r\n@external\r\ndef check(_account: address) -> bool:\r\n    \"\"\"\r\n    @notice Check if `_account` is allowed to bridge\r\n    @param _account The account to check\r\n    \"\"\"\r\n    return True","ABI":"[{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"bridge\",\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"cost\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"check\",\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]}]","ContractName":"Curve Bridge Wrapper","CompilerVersion":"vyper:0.3.10","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}